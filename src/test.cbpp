//mingw32-make

#include <windows.h>
#include <GL/glut.h>
#include <stdio.h>


float line_width = 0.1f;
float line_posy = 0.0f,line_posx = -0.5;
float enemyMovex = 0.0f,enemyMovey = 0.0f;
bool line_forward = true;
float YDirection = 0,speedy = 0;
float XDirection = 0;
float speed = 0.001;
bool Moving = false;
int val =10;

GLfloat cameraX = 0.0f;
GLfloat cameraY = 0.0f; 
GLfloat cameraZ = 5.0f;

// Draw white stripes on the road
void drawZebraCrossing(float y)    
{
    glColor3f(1.0, 1.0, 1.0);
glBegin(GL_QUADS);

glVertex3f(-0.7, y, 0.02);
glVertex3f(-0.5, y, 0.02);
glVertex3f(-0.5, y-0.4, 0.02);
glVertex3f(-0.7, y-0.4, 0.02);

glVertex3f(-0.3, y, 0.02);
glVertex3f(-0.1, y, 0.02);
glVertex3f(-0.1, y-0.4, 0.02);
glVertex3f(-0.3, y-0.4, 0.02);

glVertex3f(0.1, y, 0.02);
glVertex3f(0.3, y, 0.02);
glVertex3f(0.3, y-0.4, 0.02);
glVertex3f(0.1, y-0.4, 0.02);

glVertex3f(0.5, y, 0.02);
glVertex3f(0.7, y, 0.02);
glVertex3f(0.7, y-0.4, 0.02);
glVertex3f(0.5, y-0.4, 0.02);

glEnd();
}
// Draw white stripes on the road done

//Drawing a car
void drawCar(float c1,float c2,float c3,float x,float y,float posix,float posiy)
{
    glPushMatrix();
glTranslatef(posix, posiy, 0.0f);
//Main body
glColor3f(c1, c2, c3);
glBegin(GL_QUADS);
    glVertex3f(-0.1f + x, -0.1f + y, 0.399f);
    glVertex3f(0.0f + x, -0.1f + y, 0.399f);
    glVertex3f(0.0f + x, 0.1f + y, 0.399f);
    glVertex3f(-0.1f + x, 0.1f + y, 0.399f);
glEnd();
//Main body end

//Windows
glColor3f(0.0f, 0.0f, 0.0f);
glBegin(GL_QUADS);
    glVertex3f(-0.09f + x, 0.07f + y, 0.4f);
    glVertex3f(-0.01f + x, 0.07f + y, 0.4f);
    glVertex3f(-0.01f + x, 0.01f + y, 0.4f);
    glVertex3f(-0.09f + x, 0.01f + y, 0.4f);
glEnd();

glBegin(GL_QUADS);
    glVertex3f(-0.09f + x, -0.03f + y, 0.4f);
    glVertex3f(-0.01f + x, -0.03f + y, 0.4f);
    glVertex3f(-0.01f + x, -0.07f + y, 0.4f);
    glVertex3f(-0.09f + x, -0.07f + y, 0.4f);
glEnd();

glColor3f(0.3f, 0.3f, 0.3f);
glBegin(GL_QUADS);
    glVertex3f(-0.09f + x, 0.07f + y, 0.401f);
    glVertex3f(-0.03f + x, 0.07f + y, 0.401f);
    glVertex3f(-0.03f + x, 0.01f + y, 0.401f);
    glVertex3f(-0.09f + x, 0.01f + y, 0.401f);
glEnd();

glBegin(GL_QUADS);
    glVertex3f(-0.09f + x, -0.03f + y, 0.401f);
    glVertex3f(-0.03f + x, -0.03f + y, 0.401f);
    glVertex3f(-0.03f + x, -0.07f + y, 0.401f);
    glVertex3f(-0.09f + x, -0.07f + y, 0.401f);
glEnd();
//Windows end

//Wheels
    //Wheel lt
    glColor3f(0.0f, 0.0f, 0.0f);
    glBegin(GL_QUADS);
        glVertex3f(-0.1f + x,0.02f + y,0.4f);
        glVertex3f(-0.12f+ x,0.02f + y,0.4f);
        glVertex3f(-0.12f+ x,0.08f + y,0.4f);
        glVertex3f(-0.1f+ x,0.08f + y,0.4f);
    glEnd();

     //Wheel rt
    glBegin(GL_QUADS);
        glVertex3f(0.02f+ x,0.02f + y,0.4f);
        glVertex3f(0.0f+ x,0.02f + y,0.4f);
        glVertex3f(0.0f+ x,0.08f + y,0.4f);
        glVertex3f(0.02f+ x,0.08f + y,0.4f);
    glEnd();

      //Wheel rb
    glBegin(GL_QUADS);
    // glColor3f(0.0f, 1.0f, 0.0f);
        glVertex3f(0.02f+ x,-0.036f + y,0.4f);
        glVertex3f(0.0f+ x,-0.036f + y,0.4f);
        glVertex3f(0.0f+ x,-0.096f + y,0.4f);
        glVertex3f(0.02f+ x,-0.096f + y,0.4f);
    glEnd();

      //Wheel lb
    glBegin(GL_QUADS);
    // glColor3f(0.0f, 1.0f, 0.0f);
        glVertex3f(-0.1f+ x,-0.036f + y,0.4f);
        glVertex3f(-0.12f+ x,-0.036f + y,0.4f);
        glVertex3f(-0.12f+ x,-0.096f + y,0.4f);
        glVertex3f(-0.1f+ x,-0.096f + y,0.4f);
    glEnd();
    //Wheel end


    //Head lights
    glColor3f(0.0f, 0.0f, 1.0f);
    //Head lights left
    glBegin(GL_QUADS);
        glVertex3f(-0.1f+ x,0.1f + y,0.4f);
        glVertex3f(-0.07f+ x,0.1f + y,0.4f);
        glVertex3f(-0.07f+ x,0.082f + y,0.4f);
        glVertex3f(-0.1f+ x,0.082f + y,0.4f);
    glEnd();

    //Head lights right
      glBegin(GL_QUADS);
        glVertex3f(0.0f+ x,0.1f + y,0.4f);
        glVertex3f(-0.03f+ x,0.1f + y,0.4f);
        glVertex3f(-0.03f+ x,0.082f + y,0.4f);
        glVertex3f(0.0f+ x,0.082f + y,0.4f);
    glEnd();
    //Head lights end 
glPopMatrix();
}



void display() {
     glClearColor(0.13, 0.55, 0.13,1.0);
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); 
    //  glMatrixMode(GL_MODELVIEW);

        glLoadIdentity();

     // Set camera position and orientation
   gluLookAt(cameraX, cameraY, cameraZ, // camera position
             cameraX, cameraY, 0.0f,   // target position
             0.0f, 1.0f, 0.0f);         // up vector

    // Draw road
   glColor3f(0.2f, 0.2f, 0.2f);
   glBegin(GL_QUADS);
      glVertex3f(-0.7f, -3.0f, 0.0f);
      glVertex3f(-0.7f, 100.0f, 0.0f);
      glVertex3f(0.7f, 100.0f, 0.0f);
      glVertex3f(0.7f, -3.0f, 0.0f);
   glEnd();

    drawZebraCrossing(0.6);
    
   

// //********Car section*********
    //     glTranslatef(line_posx, line_posy, 0.0f);
    
//     //Main body
//     glColor3f(1.0f, 0.0f, 0.0f);
//     glBegin(GL_QUADS);
//         glVertex3f(-0.1f, -0.1f,0.399f);
//         glVertex3f(0.0f, -0.1f,0.399f);
//         glVertex3f(0.0f, 0.1f,0.399f);
//         glVertex3f(-0.1f, 0.1f,0.399f);
//     glEnd();
//     //Main body end


//      //Windows
//     glColor3f(0.0f, 0.0f, 0.0f);
//     glBegin(GL_QUADS);
//         glVertex3f(-0.09f,0.07f,0.4f);
//         glVertex3f(-0.01f,0.07f,0.4f);
//         glVertex3f(-0.01f,0.01f,0.4f);
//         glVertex3f(-0.09f,0.01f,0.4f);
//     glEnd();

//     glBegin(GL_QUADS);
//         glVertex3f(-0.09f,-0.03f,0.4f);
//         glVertex3f(-0.01f,-0.03f,0.4f);
//         glVertex3f(-0.01f,-0.07f,0.4f);
//         glVertex3f(-0.09f,-0.07f,0.4f);
//     glEnd();

//     glColor3f(0.3f, 0.3f, 0.3f);
//     glBegin(GL_QUADS);
//         glVertex3f(-0.09f,0.07f,0.401f);
//         glVertex3f(-0.03f,0.07f,0.401f);
//         glVertex3f(-0.03f,0.01f,0.401f);
//         glVertex3f(-0.09f,0.01f,0.401f);
//     glEnd();

//      glBegin(GL_QUADS);
//          glVertex3f(-0.09f,-0.03f,0.401f);
//         glVertex3f(-0.03f,-0.03f,0.401f);
//         glVertex3f(-0.03f,-0.07f,0.401f);
//         glVertex3f(-0.09f,-0.07f,0.401f);
//     glEnd();
//     //Windows end


//     //Wheels
//     //Wheel lt
//     glColor3f(0.0f, 0.0f, 0.0f);
//     glBegin(GL_QUADS);
//         glVertex3f(-0.1f,0.02f,0.4f);
//         glVertex3f(-0.12f,0.02f,0.4f);
//         glVertex3f(-0.12f,0.08f,0.4f);
//         glVertex3f(-0.1f,0.08f,0.4f);
//     glEnd();

//      //Wheel rt
//     glBegin(GL_QUADS);
//         glVertex3f(0.02f,0.02f,0.4f);
//         glVertex3f(0.0f,0.02f,0.4f);
//         glVertex3f(0.0f,0.08f,0.4f);
//         glVertex3f(0.02f,0.08f,0.4f);
//     glEnd();

//       //Wheel rb
//     glBegin(GL_QUADS);
//     // glColor3f(0.0f, 1.0f, 0.0f);
//         glVertex3f(0.02f,-0.036f,0.4f);
//         glVertex3f(0.0f,-0.036f,0.4f);
//         glVertex3f(0.0f,-0.096f,0.4f);
//         glVertex3f(0.02f,-0.096f,0.4f);
//     glEnd();

//       //Wheel lb
//     glBegin(GL_QUADS);
//     // glColor3f(0.0f, 1.0f, 0.0f);
//         glVertex3f(-0.1f,-0.036f,0.4f);
//         glVertex3f(-0.12f,-0.036f,0.4f);
//         glVertex3f(-0.12f,-0.096f,0.4f);
//         glVertex3f(-0.1f,-0.096f,0.4f);
//     glEnd();
//     //Wheel end


//     //Head lights
//     glColor3f(0.0f, 0.0f, 1.0f);
//     //Head lights left
//     glBegin(GL_QUADS);
//         glVertex3f(-0.1f,0.1f,0.4f);
//         glVertex3f(-0.07f,0.1f,0.4f);
//         glVertex3f(-0.07f,0.082f,0.4f);
//         glVertex3f(-0.1f,0.082f,0.4f);
//     glEnd();

//     //Head lights right
//       glBegin(GL_QUADS);
//         glVertex3f(0.0f,0.1f,0.4f);
//         glVertex3f(-0.03f,0.1f,0.4f);
//         glVertex3f(-0.03f,0.082f,0.4f);
//         glVertex3f(0.0f,0.082f,0.4f);
//     glEnd();
//     //Head lights end 

    drawCar(1.0,0.0,0.0,0,0,line_posx,line_posy);

    drawCar(0.0,1.0,1.0,0,0,enemyMovex,enemyMovey);
    

    glFlush();
    glutSwapBuffers();
}

void update(int value) {

    //Enemy movement
    // enemyMovex = 0.04;
    enemyMovey += 0.001;

    //Character movement
    line_posy += YDirection;
    line_posx += XDirection;

    //Camera movement
    cameraY += YDirection;

    
    
    

    glutPostRedisplay();
     glutTimerFunc(val, update, 0);
}

void onClick( unsigned char a, int x, int y)
{
glutTimerFunc(0,NULL,0);
if(a == 'w')
{
if(YDirection<=0.05)
YDirection += speed;
Moving = true;
XDirection=0;
}
else if(a == 's')
{
if(YDirection>0)
YDirection -= speed;
if(YDirection==0)
YDirection = 0;
XDirection=0;
Moving = true;
}
else if(a == 'd')
{
XDirection = speed*4;
}
else if(a == 'a')
{
XDirection = -speed*4;
}
else 
{
XDirection = 0;   
Moving = false;
}

}

int main(int argc, char** argv) {
    glutInit(&argc, argv);

      int screenWidth = GetSystemMetrics(SM_CXSCREEN);
    int screenHeight = GetSystemMetrics(SM_CYSCREEN);

    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);
    glutInitWindowSize(screenWidth, screenHeight);
    glutCreateWindow("Line Animation");
    
    glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    
    glutDisplayFunc(display);
    glutKeyboardFunc(onClick);

       glEnable(GL_DEPTH_TEST);
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   gluPerspective(45.0f, (GLfloat)640 / (GLfloat)480, 0.1f, 100.0f);
     glMatrixMode(GL_MODELVIEW);
    glutTimerFunc(0, update, 0);
    
    glutMainLoop();
    return 0;
}